[1/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/11] Linking C static library esp-idf\main\libmain.a
[3/11] Performing configure step for 'bootloader'
-- Building ESP-IDF components for target esp32
-- Project sdkconfig file D:/ESP/ESP project/fingerprint/sdkconfig
-- Compiler supported targets: xtensa-esp-elf
-- Adding linker script D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/soc/esp32/ld/esp32.peripherals.ld
-- Bootloader project name: "bootloader" version: 1
-- Adding linker script D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_rom/esp32/ld/esp32.rom.ld
-- Adding linker script D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_rom/esp32/ld/esp32.rom.api.ld
-- Adding linker script D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_rom/esp32/ld/esp32.rom.libgcc.ld
-- Adding linker script D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_rom/esp32/ld/esp32.rom.newlib-funcs.ld
-- Adding linker script D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/bootloader/subproject/main/ld/esp32/bootloader.ld
-- Adding linker script D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/bootloader/subproject/main/ld/esp32/bootloader.rom.ld
-- Components: bootloader bootloader_support efuse esp_app_format esp_bootloader_format esp_common esp_hw_support esp_rom esp_system esptool_py freertos hal log main micro-ecc newlib partition_table soc spi_flash xtensa
-- Component paths: D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/bootloader D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/bootloader_support D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/efuse D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_app_format D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_bootloader_format D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_common D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_hw_support D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_rom D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esp_system D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/esptool_py D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/freertos D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/hal D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/log D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/bootloader/subproject/main D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/bootloader/subproject/components/micro-ecc D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/newlib D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/soc D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/spi_flash D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/xtensa
-- Configuring done
-- Generating done
-- Build files have been written to: D:/ESP/ESP project/fingerprint/build/bootloader
[4/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\ESP\ESP project\fingerprint\build\bootloader\esp-idf\esptool_py" && D:\ESP\ESP\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/ESP/ESP project/fingerprint/build/bootloader/bootloader.bin""
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/fingerprint.elf.dir/project_elf_src_esp32.c.obj
[8/10] Linking CXX executable fingerprint.elf
[9/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/ESP/ESP project/fingerprint/build/fingerprint.bin
[10/10] cmd.exe /C "cd /D "D:\ESP\ESP project\fingerprint\build\esp-idf\esptool_py" && D:\ESP\ESP\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/ESP/ESP project/fingerprint/build/partition_table/partition-table.bin" "D:/ESP/ESP project/fingerprint/build/fingerprint.bin""
fingerprint.bin binary size 0x32b60 bytes. Smallest app partition is 0x100000 bytes. 0xcd4a0 bytes (80%) free.

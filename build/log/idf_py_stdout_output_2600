[1/15] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "D:\ESP\ESP project\fingerprint\build\bootloader\esp-idf\esptool_py" && D:\ESP\ESP\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "D:/ESP/ESP project/fingerprint/build/bootloader/bootloader.bin""
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/13] Building C object esp-idf/user_data/CMakeFiles/__idf_user_data.dir/user_data.c.obj
[3/13] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[4/13] Building C object esp-idf/gpio_lib/CMakeFiles/__idf_gpio_lib.dir/gpio_lib.c.obj
[5/13] Building C object esp-idf/handle_password/CMakeFiles/__idf_handle_password.dir/handle_password.c.obj
[6/13] Linking C static library esp-idf\user_data\libuser_data.a
[7/13] Linking C static library esp-idf\gpio_lib\libgpio_lib.a
[8/13] Linking C static library esp-idf\handle_password\libhandle_password.a
[9/13] Linking C static library esp-idf\main\libmain.a
[10/13] Generating ld/sections.ld
[11/13] Linking CXX executable fingerprint.elf
[12/13] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/ESP/ESP project/fingerprint/build/fingerprint.bin
[13/13] cmd.exe /C "cd /D "D:\ESP\ESP project\fingerprint\build\esp-idf\esptool_py" && D:\ESP\ESP\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/ESP/ESP/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "D:/ESP/ESP project/fingerprint/build/partition_table/partition-table.bin" "D:/ESP/ESP project/fingerprint/build/fingerprint.bin""
fingerprint.bin binary size 0x30610 bytes. Smallest app partition is 0x100000 bytes. 0xcf9f0 bytes (81%) free.
